---
const id = 'theme-toggle';
---
<button id={id} class="theme-toggle" aria-label="テーマを切り替え">
  <span id="theme-toggle-icon" aria-hidden="true">🌓</span>
  <span id="theme-toggle-label">Theme</span>
  <script is:inline>
    (function(){
      const root = document.documentElement;
      const storageKey = 'theme';
      const btn = document.getElementById('theme-toggle');
      const iconEl = document.getElementById('theme-toggle-icon');
      const labelEl = document.getElementById('theme-toggle-label');

      const apply = (t) => {
        if (t === 'light' || t === 'dark') {
          root.dataset.theme = t;
        } else {
          delete root.dataset.theme;
        }
        updateUI();
      };

      const getSystem = () => matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      const current = () => root.dataset.theme || getSystem();

      const updateUI = () => {
        const c = current();
        if (iconEl) iconEl.textContent = c === 'dark' ? '🌙' : '☀️';
        if (labelEl) labelEl.textContent = c === 'dark' ? 'Dark' : 'Light';
      };

      if (btn) {
        btn.addEventListener('click', () => {
          const c = current();
          const next = c === 'dark' ? 'light' : 'dark';
          try { localStorage.setItem(storageKey, next); } catch (_) {}
          apply(next);
        });
      }

      // react to system changes only if user has no explicit setting
      try {
        matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
          try { if (!localStorage.getItem(storageKey)) apply(undefined); } catch (_) {}
        });
      } catch(_) {}

      // initial UI sync
      updateUI();
    })();
  </script>
</button>
