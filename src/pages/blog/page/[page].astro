---
import BaseLayout from '@layouts/BaseLayout.astro';
import PostCard from '@molecules/PostCard.astro';
import { getCollection } from 'astro:content';
import { withBase } from '@lib/paths';

export async function getStaticPaths({ paginate }) {
  const all = await getCollection('posts');
  const posts = all
    .filter((p) => p.data.draft !== true && p.data.lang === 'ja')
    .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());
  return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;
---
<BaseLayout title={`Blog - Page ${page.current}`}> 
  <h1>ブログ - {page.current}ページ</h1>
  <div class="post-grid">
    {page.data.map((p) => {
      const s = p.slug.split('/').pop();
      return (
      <PostCard
        href={withBase(`blog/${s}/`)}
        title={p.data.title}
        description={p.data.description}
        date={p.data.date}
        hero={p.data.hero}
        tags={p.data.tags}
      />
      );
    })}
  </div>
  <p style="margin-top:1rem; display:flex; gap:1rem;">
    {page.url.prev && <a href={withBase(page.url.prev.replace(/^\//,''))}>← 新しいページ</a>}
    {page.url.next && <a href={withBase(page.url.next.replace(/^\//,''))}>古いページ →</a>}
  </p>
</BaseLayout>
