---
import BaseLayout from '@layouts/BaseLayout.astro';
import PostCard from '@components/PostCard.astro';
import { getCollection } from 'astro:content';
import { withBase } from '@lib/paths';

export async function getStaticPaths() {
  const posts = (await getCollection('posts'))
    .filter((p) => p.data.draft !== true && p.data.lang === 'ja');
  const set = new Set<string>();
  for (const p of posts) for (const t of p.data.tags ?? []) set.add(t.toLowerCase().replace(/\s+/g,'-'));
  return Array.from(set).map((t) => ({ params: { tag: t } }));
}

const { tag } = Astro.params;
const all = await getCollection('posts');
const posts = all
  .filter((p) => p.data.draft !== true && p.data.lang === 'ja' && (p.data.tags ?? []).map((t) => t.toLowerCase().replace(/\s+/g,'-')).includes(tag!))
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());
---
<BaseLayout title={`Tag: ${tag}`}>
  <h1>タグ: {tag}</h1>
  <div class="post-grid">
    {posts.map((p) => {
      const s = p.slug.split('/').pop();
      return (
      <PostCard
        href={withBase(`blog/${s}/`)}
        title={p.data.title}
        description={p.data.description}
        date={p.data.date}
        hero={p.data.hero}
        tags={p.data.tags}
      />
      );
    })}
  </div>
  <p style="margin-top:1rem;"><a href={withBase('tags/')}>← タグ一覧へ</a></p>
</BaseLayout>
